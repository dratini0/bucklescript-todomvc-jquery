// Generated by BUCKLESCRIPT VERSION 1.0.1 , PLEASE EDIT WITH CARE
'use strict';

var ArrayOps     = require("./arrayOps");
var Hashtbl      = require("bs-platform/lib/js/hashtbl");
var Pervasives   = require("bs-platform/lib/js/pervasives");
var Jquery$prime = require("jquery");
var $$Array      = require("bs-platform/lib/js/array");
var Template     = require("./template");
var Jquery       = require("./jquery");
var $$String     = require("bs-platform/lib/js/string");
var Random       = require("bs-platform/lib/js/random");
var Types        = require("./types");

function jq$prime(prim) {
  return Jquery$prime(prim);
}

var state = /* record */[
  /* todos : array */[],
  /* filter : All */0
];

var derivedState = /* record */[/* todoIdx */Hashtbl.create(/* None */0, 100)];

function uuid() {
  var c = function () {
    return Pervasives.string_of_int(Random.$$int(9));
  };
  var c8 = function () {
    return $$String.concat("", $$Array.to_list($$Array.map(c, ArrayOps.array_range(8))));
  };
  return $$String.concat("-", $$Array.to_list($$Array.map(c8, ArrayOps.array_range(4))));
}

function pluralize(count, word) {
  if (count <= 1) {
    return word;
  }
  else {
    return word + "s";
  }
}

function store_set(namespace, data) {
  localStorage.setItem(namespace, JSON.stringify(data));
  return /* () */0;
}

function store_get(namespace) {
  return JSON.parse(localStorage.getItem(namespace));
}

function toggle(jq, flag) {
  if (flag) {
    jq.show();
  }
  else {
    jq.hide();
  }
  return /* () */0;
}

function getFilteredTodos(filterType, todos) {
  switch (filterType) {
    case 0 : 
        return todos;
    case 1 : 
        return ArrayOps.array_filter(function (x) {
                    return !x[/* completed */2];
                  }, todos);
    case 2 : 
        return ArrayOps.array_filter(function (x) {
                    return x[/* completed */2];
                  }, todos);
    
  }
}

function renderFooter() {
  var activeTodoCount = getFilteredTodos(/* Active */1, state[/* todos */0]).length;
  var completedTodoCount = state[/* todos */0].length - activeTodoCount | 0;
  var activeTodoWord = pluralize(activeTodoCount, "item");
  var html = Template.footerTemplate(activeTodoCount, activeTodoWord, completedTodoCount, state[/* filter */1]);
  Jquery.jquery("#footer").html(html);
  return toggle(Jquery.jquery("#footer"), +(state[/* todos */0].length > 0));
}

function calcIdx(todos, idx) {
  var f = function (i, t) {
    return Hashtbl.add(idx, t[/* id */1], i);
  };
  return $$Array.iteri(f, todos);
}

function render() {
  calcIdx(state[/* todos */0], derivedState[/* todoIdx */0]);
  var todos;
  try {
    console.log(state[/* todos */0].length);
    todos = getFilteredTodos(state[/* filter */1], state[/* todos */0]);
  }
  catch (exn){
    state[/* todos */0] = /* array */[];
    todos = state[/* todos */0];
  }
  var todoCount = todos.length;
  var html = Template.todoTemplate(todos);
  Jquery.jquery("#todo-list").html(html);
  toggle(Jquery.jquery("#main"), +(todoCount > 0));
  renderFooter(/* () */0);
  localStorage.setItem("todos-jquery-bucklescript", JSON.stringify(todos));
  return /* () */0;
}

function indexFromEl(el) {
  var id = Jquery$prime(el).closest("li").data("id");
  return Hashtbl.find(derivedState[/* todoIdx */0], id);
}

function bind_events() {
  var newTodoKeyup = function (e) {
    var input = Jquery$prime(e.target);
    var v = $$String.trim(input.val());
    if (e.which === 13 && v !== "") {
      console.log(e);
      var t_001 = /* id */uuid(/* () */0);
      var t = /* record */[
        /* title */v,
        t_001,
        /* completed : false */0
      ];
      ArrayOps.array_append(t, state[/* todos */0]);
      input.val("");
      render(/* () */0);
      return /* true */1;
    }
    else {
      return /* false */0;
    }
  };
  Jquery.jquery("#new-todo").on("keyup", newTodoKeyup);
  var destroy_body = function (_, e) {
    var i = indexFromEl(e.target);
    state[/* todos */0] = ArrayOps.array_splice(i, state[/* todos */0]);
    return render(/* () */0);
  };
  var destroy = function (e) {
    var jq = this ;
    destroy_body(jq, e);
    return /* true */1;
  };
  var edit = function (e) {
    var input = Jquery$prime(e.target).closest("li").addClass("editing").find(".edit");
    var i = indexFromEl(e.target);
    input.val(state[/* todos */0][i][/* title */0]).focus();
    return /* true */1;
  };
  var editKeyup = function (e) {
    if (e.which === 13) {
      Jquery$prime(e.target).blur();
    }
    else if (e.which === 27) {
      Jquery$prime(e.target).data("abort", "true").blur();
    }
    return /* true */1;
  };
  var onToggle = function (e) {
    var i = indexFromEl(e.target);
    var init = state[/* todos */0][i];
    state[/* todos */0][i] = /* record */[
      /* title */init[/* title */0],
      /* id */init[/* id */1],
      /* completed */!state[/* todos */0][i][/* completed */2]
    ];
    render(/* () */0);
    return /* true */1;
  };
  var update = function (e) {
    var jq = this ;
    var el = Jquery$prime(e.target);
    var i = indexFromEl(e.target);
    var v = $$String.trim(el.val());
    if (v === "") {
      destroy_body(jq, e);
    }
    else if (el.data("abort") === "true") {
      el.data("abort", "false");
    }
    else {
      var init = state[/* todos */0][i];
      state[/* todos */0][i] = /* record */[
        /* title */v,
        /* id */init[/* id */1],
        /* completed */init[/* completed */2]
      ];
    }
    render(/* () */0);
    return /* true */1;
  };
  var destroyCompleted = function () {
    state[/* todos */0] = getFilteredTodos(/* Active */1, state[/* todos */0]);
    state[/* filter */1] = /* All */0;
    render(/* () */0);
    return /* true */1;
  };
  Jquery.jquery("#todo-list").on("change", ".toggle", onToggle).on("dblclick", "label", edit).on("keyup", ".edit", editKeyup).on("focusout", ".edit", update).on("click", ".destroy", destroy);
  Jquery.jquery("#footer").on("click", "#clear-completed", destroyCompleted);
  Jquery.jquery((window)).on("hashchange", function () {
        state[/* filter */1] = Types.readFilter($$String.sub(window.location.hash, 2, window.location.hash.length - 2 | 0));
        render(/* () */0);
        return /* true */1;
      });
  return /* () */0;
}

function init() {
  Random.self_init(/* () */0);
  state[/* filter */1] = Types.readFilter($$String.sub(window.location.hash, 2, window.location.hash.length - 2 | 0));
  bind_events(/* () */0);
  try {
    state[/* todos */0] = JSON.parse(localStorage.getItem("todos-jquery-bucklescript"));
    if (state[/* todos */0].length) {
      return 0;
    }
    else {
      console.log("0 item");
      return /* () */0;
    }
  }
  catch (exn){
    localStorage.setItem("todos-jquery-bucklescript", JSON.stringify(/* array */[]));
    return /* () */0;
  }
}

init(/* () */0);

render(/* () */0);

var enter_key = 13;

var escape_key = 27;

var jq = Jquery.jquery;

exports.enter_key        = enter_key;
exports.escape_key       = escape_key;
exports.jq               = jq;
exports.jq$prime         = jq$prime;
exports.state            = state;
exports.derivedState     = derivedState;
exports.uuid             = uuid;
exports.pluralize        = pluralize;
exports.store_set        = store_set;
exports.store_get        = store_get;
exports.toggle           = toggle;
exports.getFilteredTodos = getFilteredTodos;
exports.renderFooter     = renderFooter;
exports.calcIdx          = calcIdx;
exports.render           = render;
exports.indexFromEl      = indexFromEl;
exports.bind_events      = bind_events;
exports.init             = init;
/* derivedState Not a pure module */
